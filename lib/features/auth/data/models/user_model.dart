// ignore_for_file: public_member_api_docs, sort_constructors_first, non_constant_identifier_names
import '../../domain/entities/user_entity.dart';

import 'package:hive/hive.dart';

part 'user_model.g.dart';

@HiveType(typeId: 0)
class UserModel extends UserEntity {
  UserModel({
    int? id,
    @HiveField(0) String? role,
    @HiveField(1) String? username,
    @HiveField(2) String? first_name,
    @HiveField(3) String? last_name,
    String? father_name,
    String? mother_name,
    String? avatar_path,
    @HiveField(4) String? email,
    String? password,
    String? confirm_password,
    int? university_id,
    @HiveField(5) int? major_id,
    bool? has_submission,
    String? submission_status,
    String? resume_path,
    int? submission_id,
    int? approved,
    String? company,
    String? company_description,
    String? distinctive_title,
    String? occupation,
    String? afm,
    String? doy,
    String? address,
    String? city,
    String? postal_code,
    @HiveField(6) Map? complete,
  }) : super(
          id: id,
          role: role,
          username: username,
          first_name: first_name,
          last_name: last_name,
          father_name: father_name,
          mother_name: mother_name,
          avatar_path: avatar_path,
          email: email,
          password: password,
          confirm_password: confirm_password,
          university_id: university_id,
          major_id: major_id,
          has_submission: has_submission,
          submission_status: submission_status,
          resume_path: resume_path,
          submission_id: submission_id,
          approved: approved,
          company: company,
          company_description: company_description,
          distinctive_title: distinctive_title,
          occupation: occupation,
          afm: afm,
          doy: doy,
          address: address,
          city: city,
          postal_code: postal_code,
          complete: complete,
        );

  factory UserModel.fromJson(Map<dynamic, dynamic> json) {
    return UserModel(
      id: json['id'],
      role: json['role'],
      username: json['username'],
      first_name: json['first_name'],
      last_name: json['last_name'],
      father_name: json['father_name'],
      mother_name: json['mother_name'],
      avatar_path: json['avatar_path'],
      email: json['email'],
      password: json['password'],
      confirm_password: json['confirm_password'],
      university_id: json['university_id'],
      major_id: json['major_id'],
      has_submission: json['has_submission'],
      submission_status: json['submission_status'],
      resume_path: json['resume_path'],
      submission_id: json['submission_id'],
      approved: json['approved'],
      company: json['company'],
      company_description: json['company_description'],
      distinctive_title: json['distinctive_title'],
      occupation: json['occupation'],
      afm: json['afm'],
      doy: json['doy'],
      address: json['address'],
      city: json['city'],
      postal_code: json['postal_code'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'role': role,
      'username': username,
      'first_name': first_name,
      'last_name': last_name,
      'father_name': father_name,
      'mother_name': mother_name,
      'avatar_path': avatar_path,
      'email': email,
      'password': password,
      'confirm_password': confirm_password,
      'university_id': university_id,
      'major_id': major_id,
      'has_submission': has_submission,
      'submission_status': submission_status,
      'resume_path': resume_path,
      'submission_id': submission_id,
      'approved': approved,
      'company': company,
      'company_description': company_description,
      'distinctive_title': distinctive_title,
      'occupation': occupation,
      'afm': afm,
      'doy': doy,
      'address': address,
      'city': city,
      'postal_code': postal_code,
    };
  }
}
